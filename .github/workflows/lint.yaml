name: Linting

on:
  push:
    branches: [master]
  pull_request:

jobs:
  eslint:
    name: "Run Solhint"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [lts/*]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
      - run: yarn install
      - run: yarn solhint -c .solhint.json contracts/**/*.sol

    # steps:
    #   # Checkout source code
    #   - name: Checkout
    #     uses: actions/checkout@v2

    #   # Setup Nodejs
    #   - name: Use Node.js ${{ matrix.node-version }}
    #     uses: actions/setup-node@v2
    #     with:
    #       node-version: ${{ matrix.node-version }}
    #       cache: "npm"

    #   # Setup yarn
    #   - name: Install yarn
    #     run: npm install -g yarn

    #   # Cache dependencies for faster build time in future
    #   - name: Cache dependencies
    #     uses: actions/cache@v2
    #     with:
    #       path: |
    #         ./node_modules
    #         ./.yarn
    #       key: ${{ runner.os }}-modules-${{ hashFiles('./yarn.lock') }}

    #   # Install GYP as build dependencies
    #   - name: Install GYP
    #     run: |
    #       npm install node-gyp -g
    #       npm install node-gyp-build -g

    #   # Install project dependencies
    #   - name: Install dependencies
    #     run: |
    #       yarn install --prefer-offline  --cache-folder .yarn --modules-folder node_modules

    #   # Run linter
    #   - name: Run Solhint static analysis
    #     run: yarn solhint -c .solhint.json contracts/**/*.sol
